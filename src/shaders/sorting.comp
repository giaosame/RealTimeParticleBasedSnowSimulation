#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 64
#define PI 3.1415926f
#define PARTICLE_COUNT 1000

//layout(local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

struct Vertex {
    vec4 position;
	vec4 velocity;
	vec4 attr1;  // radius, mass, isFixed, snowPortion
	vec4 attr2;  // neighborMax, hasBrokenBond, d, (null)
};

layout(set = 0, binding = 0) buffer VerticesA {
	Vertex verticesA[];
};

layout(set = 0, binding = 1) buffer VerticesB {
	Vertex verticesB[];
};

void main() {
	uint index = gl_GlobalInvocationID.x;
	// Don't try to write beyond particle count
    if (index >= PARTICLE_COUNT)
		return;
	
	
	//const float a = 0.05 * 3.14159 / 180.0;
	verticesB[index].position *= 1.001;
	//verticesB[index].attr2.w -= 0.001;
	//vertices[index].velocity *= 0.9999;
	
}